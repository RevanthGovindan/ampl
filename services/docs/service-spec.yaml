openapi: 3.0.0
info:
  contact: {}
  description: Module to manage tasks
  title: Tasks Services
  version: "1.0"
paths:
  /public/login:
    post:
      description: Login with name and password
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/models.LoginRequest"
        description: Task data
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.LoginResponse"
      summary: Login
      tags:
        - Login
  /public/tasks:
    get:
      description: Get all the tasks
      operationId: get-task
      parameters:
        - description: Page no, if empty it will be 0
          in: query
          name: pageNo
          schema:
            type: string
        - description: limit of records, if empty everything will sent in single shot
          in: query
          name: limit
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/dao.Tasks"
                type: array
      summary: Get All Task
      tags:
        - Tasks
  /tasks:
    post:
      description: Create a new task
      operationId: create-task
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/models.CreateTask"
        description: Task data
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dao.Tasks"
      security:
        - http_bearer: []
      summary: Create
      tags:
        - Tasks
  "/tasks/{id}":
    delete:
      description: Delete task by id
      operationId: delete-task
      parameters:
        - description: Id of the task
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.MsgResponse"
      security:
        - http_bearer: []
      summary: Delete task
      tags:
        - Tasks
    get:
      description: Get a specific task by id
      operationId: get-task-id
      parameters:
        - description: Id of the task
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dao.Tasks"
      security:
        - http_bearer: []
      summary: Get Task
      tags:
        - Tasks
    put:
      description: update existing task
      operationId: update-task
      parameters:
        - description: Id of the task
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/models.UpdateTask"
        description: Task data
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dao.Tasks"
      security:
        - http_bearer: []
      summary: Update Task
      tags:
        - Tasks
tags:
  - description: Tasks services
    name: Tasks
  - description: Login services
    name: Login
servers:
  - url: http://localhost:8000
components:
  securitySchemes:
    http_bearer:
      in: header
      name: Authorization
      type: apiKey
  schemas:
    dao.Tasks:
      properties:
        createdAt:
          type: string
        description:
          type: string
        id:
          type: integer
        status:
          type: string
        title:
          type: string
        updatedAt:
          type: string
      type: object
    models.CreateTask:
      properties:
        description:
          type: string
        title:
          type: string
      required:
        - description
        - title
      type: object
    models.LoginRequest:
      properties:
        name:
          description: |-
            required: true
            example: ampl
          type: string
        password:
          description: |-
            required: true
            example: amplampl
          maxLength: 20
          minLength: 8
          type: string
      required:
        - name
        - password
      type: object
    models.LoginResponse:
      properties:
        name:
          type: string
        token:
          type: string
        type:
          type: string
      type: object
    models.MsgResponse:
      properties:
        msg:
          type: string
      type: object
    models.UpdateTask:
      properties:
        description:
          type: string
        status:
          type: string
        title:
          type: string
      required:
        - description
        - title
      type: object
